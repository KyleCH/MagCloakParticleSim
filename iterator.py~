#!/usr/bin/env python3

import numpy as np

def iterator(f, h, t, y=np.zeros(6), nmax=1000, exitcond=None, track=False):
    if track:
        t_arr = np.empty(nmax+1)
        y_arr = np.empty((nmax+1, y.size))
        t_arr[0] = t
        y_arr[0, :] = y
        del t, y
        i = 0
        if exitcond is None:
            while i < nmax:
                im1 = i
                i += 1
                t_arr[i], y_arr[i, :] = step(f, h, t_arr[im1], y_arr[im1, :])
        else:
            while i < nmax:
                im1 = i
                i += 1
                t_arr[i], y_arr[i, :] = step(f, h, t_arr[im1], y_arr[im1, :])
                if exitcond(t_arr[i], y_arr[i, :]):
                    t_arr = np.delete(t_arr, range(i+1, nmax+1), 0)
                    y_arr = np.delete(y_arr, range(i+1, nmax+1), 0)
                    break
        return t_arr, y_arr
    else:
        if exitcond is None:
            for i in range(nmax):
                t, y = step(f, h, t, y)
        else:
            for i in range(nmax):
                t, y = step(f, h, t, y)
                if exitcond(t, y):
                    break
        return t, y
    
